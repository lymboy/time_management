var u=Object.defineProperty;var a=(r,t,e)=>t in r?u(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var d=(r,t,e)=>(a(r,typeof t!="symbol"?t+"":t,e),e);import{R as g}from"./areaDataUtil.b0d6c4f6.js";class h{constructor(t){d(this,"all");t||(t=g);let e=[];const s=t[86];Object.keys(s).map(i=>{e.push({id:i,text:s[i],pid:"86",index:1});const f=t[i];Object.keys(f).map(n=>{e.push({id:n,text:f[n],pid:i,index:2});const l=t[n];l&&Object.keys(l).map(o=>{e.push({id:o,text:l[o],pid:n,index:3})})})}),this.all=e}get pca(){return this.all}getCode(t){if(!t||t.length==0)return"";for(let e of this.all)if(e.text===t)return e.id}getText(t){if(!t||t.length==0)return"";let e=[];return this.getAreaBycode(t,e,3),e.join("/")}getRealCode(t){let e=[];return this.getPcode(t,e,3),e}getPcode(t,e,s){for(let i of this.all)i.id===t&&i.index==s&&(e.unshift(t),i.pid!="86"&&this.getPcode(i.pid,e,--s))}getAreaBycode(t,e,s){for(let i of this.all)i.id===t&&i.index==s&&(e.unshift(i.text),i.pid!="86"&&this.getAreaBycode(i.pid,e,--s))}}const p=new h,m=function(r){return r&&r.includes(",")&&(r=r.substr(r.lastIndexOf(",")+1)),p.getText(r)};export{m as g};
